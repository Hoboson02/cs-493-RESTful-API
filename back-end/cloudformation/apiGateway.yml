Resources:
  MyRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}-rest-api
      Description: My REST API
      EndpointConfiguration:
        Types:
          - REGIONAL
  MyRestApiNowDeployment: 
    DependsOn: UserGetMethod
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref MyRestApi
      StageName: main

  MethodExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: apigateway.amazonaws.com
              Action: "sts:AssumeRole"
# ************************************** USER PATH **************************************
  UserResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt MyRestApi.RootResourceId
      PathPart: user
      RestApiId: !Ref MyRestApi

  UserGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserPostMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-userCreation
            - '/invocations'
  
  UserLoginResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserResource
      PathPart: 'login'
      RestApiId: !Ref MyRestApi

  UserLoginPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserLoginResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-getUserLoginID
            - '/invocations'
  
  UserNameResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserResource
      PathPart: '{username}'
      RestApiId: !Ref MyRestApi

  UserNameGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserNameResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNamePostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserNameResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameOwnedBusinessesResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameResource
      PathPart: 'owned-businesses'
      RestApiId: !Ref MyRestApi

  UserNameOwnedBusinessesGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserNameOwnedBusinessesResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameOwnedBusinessesPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserNameOwnedBusinessesResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameOwnedBusinessesBusinessResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameOwnedBusinessesResource
      PathPart: '{owned-business}'
      RestApiId: !Ref MyRestApi

  UserNameOwnedBusinessesBusinessDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref UserNameOwnedBusinessesBusinessResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNamePhotosResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameResource
      PathPart: 'photos'
      RestApiId: !Ref MyRestApi

  UserNamePhotosGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserNamePhotosResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNamePhotosPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserNamePhotosResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNamePhotosPhotoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNamePhotosResource
      PathPart: '{photo}'
      RestApiId: !Ref MyRestApi

  UserNamePhotosPhotoDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref UserNamePhotosPhotoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameReviewsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameResource
      PathPart: 'reviews'
      RestApiId: !Ref MyRestApi

  UserNameReviewsGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserNameReviewsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameReviewsPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserNameReviewsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameReviewsReviewResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameReviewsResource
      PathPart: '{review}'
      RestApiId: !Ref MyRestApi

  UserNameReviewsReviewGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserNameReviewsReviewResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserNameReviewsReviewDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref UserNameReviewsReviewResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'
# ************************************** BUSINESS PATH **************************************
  BusinessResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt MyRestApi.RootResourceId
      PathPart: business
      RestApiId: !Ref MyRestApi

  BusinessGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref BusinessResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessResource
      PathPart: '{business_name}'
      RestApiId: !Ref MyRestApi

  BusinessNameGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessNameResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref BusinessNameResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameInfoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameResource
      PathPart: 'info'
      RestApiId: !Ref MyRestApi

  BusinessNameInfoGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessNameInfoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameInfoDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref BusinessNameInfoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameInfoPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref BusinessNameInfoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNamePhotosResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameResource
      PathPart: 'photos'
      RestApiId: !Ref MyRestApi

  BusinessNamePhotosGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessNamePhotosResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNamePhotosDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref BusinessNamePhotosResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNamePhotosPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref BusinessNamePhotosResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNamePhotosPhotoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNamePhotosResource
      PathPart: '{photo}'
      RestApiId: !Ref MyRestApi

  BusinessNamePhotosPhotoGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessNamePhotosPhotoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNamePhotosPhotoDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref BusinessNamePhotosPhotoResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameReviewsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameResource
      PathPart: 'reviews'
      RestApiId: !Ref MyRestApi

  BusinessNameReviewsGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessNameReviewsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameReviewsDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref BusinessNameReviewsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameReviewsPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref BusinessNameReviewsResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameReviewsReviewResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameReviewsResource
      PathPart: '{review}'
      RestApiId: !Ref MyRestApi

  BusinessNameReviewsReviewGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessNameReviewsReviewResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameReviewsReviewDeleteMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref BusinessNameReviewsReviewResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: DELETE
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'
# ************************************** USER POOL **************************************
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      AccountRecoverySetting: 
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig: 
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes: 
        - email
      EmailConfiguration: 
        EmailSendingAccount: COGNITO_DEFAULT
      MfaConfiguration: OFF
      UsernameConfiguration: 
        CaseSensitive: true
      UserPoolName: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED

  MyAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      RestApiId: !Ref MyRestApi
      ProviderARNs:
        - !GetAtt UserPool.Arn

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}-client
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH