Resources:
  MyRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}-rest-api
      Description: My REST API
      EndpointConfiguration:
        Types:
          - REGIONAL
  MyRestApiNowDeployment: 
    DependsOn: UserGetMethod
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref MyRestApi
      StageName: main

  MethodExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: apigateway.amazonaws.com
              Action: "sts:AssumeRole"

  GetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !GetAtt MyRestApi.RootResourceId
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'
# ************************************** USER PATH **************************************
  UserResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt MyRestApi.RootResourceId
      PathPart: user
      RestApiId: !Ref MyRestApi

  UserGetMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref UserResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  UserPostMethod:
    DependsOn: MethodExecutionRole
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UserResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'
  UserNameResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserResource
      PathPart: '{username}'
      RestApiId: !Ref MyRestApi

  UserNameOwnedBusinessesResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameResource
      PathPart: 'owned-businesses'
      RestApiId: !Ref MyRestApi

  UserNameOwnedBusinessesBusinessResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameOwnedBusinessesResource
      PathPart: '{owned-business}'
      RestApiId: !Ref MyRestApi

  UserNamePhotosResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameResource
      PathPart: 'photos'
      RestApiId: !Ref MyRestApi

  UserNamePhotosPhotoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNamePhotosResource
      PathPart: '{photo}'
      RestApiId: !Ref MyRestApi

  UserNameReviewsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameResource
      PathPart: 'reviews'
      RestApiId: !Ref MyRestApi

  UserNameReviewsReviewResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref UserNameReviewsResource
      PathPart: '{review}'
      RestApiId: !Ref MyRestApi
# ************************************** BUSINESS PATH **************************************
  BusinessResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt MyRestApi.RootResourceId
      PathPart: business
      RestApiId: !Ref MyRestApi

  BusinessGetMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref BusinessResource
      RestApiId: !Ref MyRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-cs493RestfulAPI
            - '/invocations'

  BusinessNameResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessResource
      PathPart: '{business_name}'
      RestApiId: !Ref MyRestApi

  BusinessNameInfoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameResource
      PathPart: 'info'
      RestApiId: !Ref MyRestApi

  BusinessNamePhotosResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameResource
      PathPart: 'photos'
      RestApiId: !Ref MyRestApi

  BusinessNamePhotosPhotoResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNamePhotosResource
      PathPart: '{photo}'
      RestApiId: !Ref MyRestApi


  BusinessNameReviewsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameResource
      PathPart: 'reviews'
      RestApiId: !Ref MyRestApi

  BusinessNameReviewsReviewResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !Ref BusinessNameReviewsResource
      PathPart: '{review}'
      RestApiId: !Ref MyRestApi